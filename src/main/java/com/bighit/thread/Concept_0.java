package com.bighit.thread;

/**
 * @author jiangxl
 * @since 2020/8/9
 */
public class Concept_0 {
    /**
     * 进程(process)是操作系统资源分配的基本单位 线程是CPU的基本调度单位
     * 进程间不能共享数据段地址 但是同进程的线程间可以
     */

    /**
     * 线程的基本组成部分:
     *  1. CUP时间片: OS会为每一个线程分配执行时间
     *  2.运行数据:
     *      堆空间: 存储线程使用的对象 多个线程可以共享堆中的对象
     *      栈空间: 存储线程使用的局部对象 每个线程都拥有独立的栈
     *  3. 线程执行的逻辑代码
     */

    /**
     * 线程的特点:
     * 1. 线程抢占式执行: 效率高 可防止单一线程长时间占用CPU
     * 2. 在单核CPU中, 宏观上同时执行 微观上顺序执行
     */

    /**
     * Thread 和 Runnable 相比:
     * 1. 由于Java“单继承，多实现”的特性，Runnable接口使用起来比Thread更灵活。
     * 2. Runnable接口出现更符合面向对象，将线程单独进行对象的封装。
     * 3. Runnable接口出现，降低了线程对象和线程任务的耦合性。
     * 4. 如果使用线程时不需要使用Thread类的诸多方法，显然使用Runnable接口更为轻量。
     */

    /**
     * 所谓“临界区”，指的是某一块代码区域，它同一时刻只能由一个线程执行
     */
}
